[gd_resource type="VisualShader" load_steps=16 format=3 uid="uid://s188v4tr8n11"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_t6co6"]
parameter_name = "Texture"
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_h71qx"]
source = 5

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_jouoy"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_j8pu2"]
size = Vector2(595.24, 255.92)
expression = "float s = sin(a);
float c = cos(a);
mat2 m = mat2(vec2(c,-s), vec2(s,c));
rotate = m * v;"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_m0glp"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_1cs7j"]
op_type = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_8txsc"]
default_input_values = [0, 0.0, 1, 3.0]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_m7sid"]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_tfkt6"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_wc7ps"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_emqh6"]

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_gb8h7"]
default_input_values = [0, 0.1, 1, 1.0, 2, 0.0]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_ha072"]
function = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ydxis"]
default_input_values = [0, 0.0, 1, 5.0]
operator = 2

[sub_resource type="VisualShaderNodeBillboard" id="VisualShaderNodeBillboard_eqfhj"]
billboard_type = 2
keep_scale = true

[resource]
code = "shader_type spatial;
render_mode cull_disabled;

uniform sampler2D Texture : source_color;



void vertex() {
// Input:3
	vec3 n_out3p0 = VERTEX;


// VectorDecompose:4
	float n_out4p0 = n_out3p0.x;
	float n_out4p1 = n_out3p0.y;
	float n_out4p2 = n_out3p0.z;


// VectorCompose:12
	vec2 n_out12p0 = vec2(n_out4p0, n_out4p2);


// Input:2
	float n_out2p0 = TIME;


// FloatOp:13
	float n_in13p1 = 3.00000;
	float n_out13p0 = n_out2p0 * n_in13p1;


	vec2 n_out10p0;
// Expression:10
	n_out10p0 = vec2(0.0, 0.0);
	{
		float s = sin(n_out13p0);
		float c = cos(n_out13p0);
		mat2 m = mat2(vec2(c,-s), vec2(s,c));
		n_out10p0 = m * n_out12p0;
	}


// VectorDecompose:11
	float n_out11p0 = n_out10p0.x;
	float n_out11p1 = n_out10p0.y;


// FloatOp:8
	float n_in8p1 = 5.00000;
	float n_out8p0 = n_out2p0 * n_in8p1;


// FloatFunc:7
	float n_out7p0 = sin(n_out8p0);


// MultiplyAdd:6
	float n_in6p0 = 0.10000;
	float n_out6p0 = fma(n_in6p0, n_out7p0, n_out4p1);


// VectorCompose:5
	vec3 n_out5p0 = vec3(n_out11p0, n_out6p0, n_out11p1);


	mat4 n_out9p0;
// GetBillboardMatrix:9
	{
		mat4 __mvm = VIEW_MATRIX * mat4(INV_VIEW_MATRIX[0], MODEL_MATRIX[1], vec4(normalize(cross(INV_VIEW_MATRIX[0].xyz, MODEL_MATRIX[1].xyz)), 0.0), MODEL_MATRIX[3]);
		__mvm = __mvm * mat4(vec4(length(MODEL_MATRIX[0].xyz), 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, length(MODEL_MATRIX[2].xyz), 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		n_out9p0 = __mvm;
	}


// Output:0
	VERTEX = n_out5p0;
	MODELVIEW_MATRIX = n_out9p0;


}

void fragment() {

	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(Texture, UV);


// VectorDecompose:5
	float n_out5p0 = n_out4p0.x;
	float n_out5p1 = n_out4p0.y;
	float n_out5p2 = n_out4p0.z;
	float n_out5p3 = n_out4p0.w;


// Output:0
	ALBEDO = vec3(n_out4p0.xyz);
	ALPHA = n_out5p3;


}
"
graph_offset = Vector2(-501.78, -29.7697)
modes/cull = 2
nodes/vertex/0/position = Vector2(340, 200)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_m7sid")
nodes/vertex/2/position = Vector2(-1760, -20)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_tfkt6")
nodes/vertex/3/position = Vector2(-1760, 200)
nodes/vertex/4/node = SubResource("VisualShaderNodeVectorDecompose_wc7ps")
nodes/vertex/4/position = Vector2(-1380, 180)
nodes/vertex/5/node = SubResource("VisualShaderNodeVectorCompose_emqh6")
nodes/vertex/5/position = Vector2(100, 180)
nodes/vertex/6/node = SubResource("VisualShaderNodeMultiplyAdd_gb8h7")
nodes/vertex/6/position = Vector2(-400, -80)
nodes/vertex/7/node = SubResource("VisualShaderNodeFloatFunc_ha072")
nodes/vertex/7/position = Vector2(-1120, -20)
nodes/vertex/8/node = SubResource("VisualShaderNodeFloatOp_ydxis")
nodes/vertex/8/position = Vector2(-1380, -180)
nodes/vertex/9/node = SubResource("VisualShaderNodeBillboard_eqfhj")
nodes/vertex/9/position = Vector2(-1760, 360)
nodes/vertex/10/node = SubResource("VisualShaderNodeExpression_j8pu2")
nodes/vertex/10/position = Vector2(-860, 160)
nodes/vertex/10/size = Vector2(595.24, 255.92)
nodes/vertex/10/input_ports = "0,2,v;1,0,a;"
nodes/vertex/10/output_ports = "0,2,rotate;"
nodes/vertex/10/expression = "float s = sin(a);
float c = cos(a);
mat2 m = mat2(vec2(c,-s), vec2(s,c));
rotate = m * v;"
nodes/vertex/11/node = SubResource("VisualShaderNodeVectorDecompose_m0glp")
nodes/vertex/11/position = Vector2(-180, 180)
nodes/vertex/12/node = SubResource("VisualShaderNodeVectorCompose_1cs7j")
nodes/vertex/12/position = Vector2(-1120, 180)
nodes/vertex/13/node = SubResource("VisualShaderNodeFloatOp_8txsc")
nodes/vertex/13/position = Vector2(-1380, 0)
nodes/vertex/connections = PackedInt32Array(3, 0, 4, 0, 5, 0, 0, 0, 4, 1, 6, 2, 7, 0, 6, 1, 6, 0, 5, 1, 8, 0, 7, 0, 2, 0, 8, 0, 10, 0, 11, 0, 11, 0, 5, 0, 11, 1, 5, 2, 4, 0, 12, 0, 4, 2, 12, 1, 12, 0, 10, 0, 9, 0, 0, 10, 2, 0, 13, 0, 13, 0, 10, 1)
nodes/fragment/0/position = Vector2(260, 400)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_t6co6")
nodes/fragment/3/position = Vector2(-720, 200)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_h71qx")
nodes/fragment/4/position = Vector2(-320, 320)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorDecompose_jouoy")
nodes/fragment/5/position = Vector2(-20, 320)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 2, 4, 0, 0, 0, 4, 0, 5, 0, 5, 3, 0, 1)
