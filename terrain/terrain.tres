[gd_resource type="VisualShader" load_steps=14 format=3 uid="uid://bgrhhaic0lbfs"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_miv2n"]
parameter_name = "albedo"
texture_type = 1
texture_filter = 2
texture_repeat = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_oydff"]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_3lxy1"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_heupj"]
parameter_name = "scale"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_t5l7k"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_agy5f"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_f7doy"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_6vbiy"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_5jwpd"]
parameter_name = "heightmap"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_kc7nj"]
parameter_name = "height_ratio"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_tcull"]
source = 5

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_ntr8a"]

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_tf3j8"]

[resource]
code = "shader_type spatial;
uniform float height_ratio;
uniform sampler2D heightmap;
uniform float scale;
uniform sampler2D albedo : source_color, filter_linear, repeat_enable;



void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;


// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;


// FloatParameter:6
	float n_out6p0 = height_ratio;



	vec4 n_out7p0;
// Texture2D:7
	n_out7p0 = texture(heightmap, UV);


// VectorDecompose:8
	float n_out8p0 = vec3(n_out7p0.xyz).x;
	float n_out8p1 = vec3(n_out7p0.xyz).y;
	float n_out8p2 = vec3(n_out7p0.xyz).z;


// MultiplyAdd:9
	float n_out9p0 = fma(n_out6p0, n_out8p1, n_out3p1);


// VectorCompose:4
	vec3 n_out4p0 = vec3(n_out3p0, n_out9p0, n_out3p2);


// Output:0
	VERTEX = n_out4p0;


}

void fragment() {
// FloatParameter:5
	float n_out5p0 = scale;


// Input:4
	vec2 n_out4p0 = UV;


// VectorOp:6
	vec2 n_out6p0 = vec2(n_out5p0) * n_out4p0;



	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(albedo, n_out6p0);


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);


}
"
graph_offset = Vector2(-533.61, -25.6547)
nodes/vertex/0/position = Vector2(720, 160)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_agy5f")
nodes/vertex/2/position = Vector2(-800, 80)
nodes/vertex/3/node = SubResource("VisualShaderNodeVectorDecompose_f7doy")
nodes/vertex/3/position = Vector2(-360, 100)
nodes/vertex/4/node = SubResource("VisualShaderNodeVectorCompose_6vbiy")
nodes/vertex/4/position = Vector2(460, 160)
nodes/vertex/5/node = SubResource("VisualShaderNodeTexture2DParameter_5jwpd")
nodes/vertex/5/position = Vector2(-820, 480)
nodes/vertex/6/node = SubResource("VisualShaderNodeFloatParameter_kc7nj")
nodes/vertex/6/position = Vector2(-440, 300)
nodes/vertex/7/node = SubResource("VisualShaderNodeTexture_tcull")
nodes/vertex/7/position = Vector2(-400, 520)
nodes/vertex/8/node = SubResource("VisualShaderNodeVectorDecompose_ntr8a")
nodes/vertex/8/position = Vector2(-72.7318, 603.095)
nodes/vertex/9/node = SubResource("VisualShaderNodeMultiplyAdd_tf3j8")
nodes/vertex/9/position = Vector2(180, 340)
nodes/vertex/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 4, 0, 3, 2, 4, 2, 4, 0, 0, 0, 5, 0, 7, 2, 7, 0, 8, 0, 3, 1, 9, 2, 6, 0, 9, 0, 9, 0, 4, 1, 8, 1, 9, 1)
nodes/fragment/0/position = Vector2(-100, 180)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_miv2n")
nodes/fragment/2/position = Vector2(-1000, 560)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_oydff")
nodes/fragment/3/position = Vector2(-520, 320)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_3lxy1")
nodes/fragment/4/position = Vector2(-1240, 280)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_heupj")
nodes/fragment/5/position = Vector2(-1180, 80)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_t5l7k")
nodes/fragment/6/position = Vector2(-840, 160)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 0, 0, 6, 0, 3, 0, 5, 0, 6, 0, 4, 0, 6, 1)
